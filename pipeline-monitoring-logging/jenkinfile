pipeline {
    agent any

    environment {
        AZURE_SP = credentials('azure-service-principal')
        SSH_PUBLIC_KEY = credentials('admin-ssh-public-key')
        SSH_PRIVATE_KEY_CRED = 'azure-vm-ssh-key' 
        ANSIBLE_DIR = 'pipeline-monitoring-logging/ansible'
        TERRAFORM_DIR = 'pipeline-monitoring-logging/terraform'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git url: 'https://github.com/wuttipat6509650716/InternSCBTechX_Practice.git', branch: 'main'
            }
        }

        stage('Azure Login') {
            steps {
                sh '''
                az login --service-principal \
                         --username "$AZURE_SP_CLIENT_ID" \
                         --password "$AZURE_SP_CLIENT_SECRET" \
                         --tenant "$AZURE_SP_TENANT_ID"

                az account set --subscription "$AZURE_SP_SUBSCRIPTION_ID"
                '''
            }
        }

        stage('Terraform Init') {
            steps {
                dir('pipeline-monitoring-logging/terraform') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('pipeline-monitoring-logging/terraform') {
                    sh 'terraform plan -var="ssh_public_key=$SSH_PUBLIC_KEY" -out=tfplan'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('pipeline-monitoring-logging/terraform') {
                    // input message: 'Apply?', ok: 'Go'
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }
    }
}
