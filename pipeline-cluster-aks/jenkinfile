pipeline {
    agent {
        label 'agent-eiei'
    }

    environment {
        RESOURCE_GROUP = "demo-rg-aks-acr"
        LOCATION       = "southeastasia"
        AKS_NAME       = "demoakscluster"
        ACR_NAME       = "demoregistry12arubdemodev"
        IMAGE_NAME     = "myappjava"
        IMAGE_TAG      = "v1"
        CHART_NAME     = "mychart"
        NAMESPACE      = "default"
    }

    stages {

        stage('Git Checkout') {
            steps {
                git url: 'https://github.com/wuttipat6509650716/InternSCBTechX_Practice.git', branch: 'main'
            }
        }

        stage('Azure Login') {
            steps {
                sh '''
                az login --service-principal \
                         --username "$AZURE_SP_CLIENT_ID" \
                         --password "$AZURE_SP_CLIENT_SECRET" \
                         --tenant "$AZURE_SP_TENANT_ID"

                az account set --subscription "$AZURE_SP_SUBSCRIPTION_ID"
                '''
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('pipeline-cluster-aks/terraform') {
                    sh '''
                        echo "Initializing Terraform"
                        terraform init

                        echo "Applying Terraform configuration"
                        terraform apply -auto-approve
                    '''
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    echo "Fetching ACR Login Server name"
                    env.ACR_LOGIN_SERVER = sh(script: "az acr show --name ${env.ACR_NAME} --query loginServer --output tsv", returnStdout: true).trim()
                    if (!env.ACR_LOGIN_SERVER) {
                        error("Could not fetch ACR Login Server. Please check if ACR '${env.ACR_NAME}' exists.")
                    }
                    echo "ACR Login Server is: ${env.ACR_LOGIN_SERVER}"
                }

                sh '''
                    echo "Logging in to Azure Container Registry"
                    az acr login --name $ACR_NAME

                    echo "Building Docker image"
                    docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG .

                    echo "Pushing Docker image to ACR"
                    docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG
                '''
            }
        }

        stage('Get AKS Credentials') {
            steps {
                sh '''
                    echo "Getting AKS cluster credentials"
                    az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_NAME --overwrite-existing
                '''
            }
        }

        # stage('Helm Deploy') {
        #     steps {
        #         sh '''
        #             echo "Deploying application with Helm..."
        #             helm upgrade --install $CHART_NAME ./helm/$CHART_NAME \
        #                 --namespace $NAMESPACE \
        #                 --create-namespace \
        #                 --set image.repository=$ACR_LOGIN_SERVER/$IMAGE_NAME \
        #                 --set image.tag=$IMAGE_TAG
        #         '''
        #     }
        # }
    }

    post {
        always {
            echo "Pipeline finished."
            sh 'az logout || true'
        }
        success {
            echo "Deployment to AKS complete."
        }
        failure {
            echo "Deployment failed. Please check the logs."
        }
    }
}